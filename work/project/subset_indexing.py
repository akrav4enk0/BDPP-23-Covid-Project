"""
warning: autogenerated by writefile2. do not edit!
"""


"""
index 1-dimensional array by subset, in an R/numpy fashion
"""

import numpy as np
from sklearn.model_selection import train_test_split

def subset_indexing( array, subset ):

    # slice indexing
    if type( subset ) == slice:

        return array[ subset ]

    # boolean indexing
    if type( subset ) == list and len( subset ) == len( array ) and len( subset ) > 0 and type( subset[ 0 ]) == bool:

        return subset_indexing( array, np.where( subset )[ 0 ].tolist( ))

    # integer indexing
    if type( subset ) == list and len( subset ) > 0 and type( subset[ 0 ]) == int:

        return [ array[ i ] for i in subset ]

    # train test split indexing
    if type( subset ) == dict:

        if subset[ "type" ] == "train_test_split":

            kwargs = { ** subset }
            del kwargs[ "type" ]
            [ train_subset, test_subset ] = train_test_split( range( len( array )), ** kwargs )
            return subset_indexing( array, train_subset ), subset_indexing( array, test_subset )

        if subset[ "type" ] == "train_split":

            return subset_indexing( array, { ** subset, ** { "type": "train_test_split" }})[ 0 ]

        if subset[ "type" ] == "test_split":

            return subset_indexing( array, { ** subset, ** { "type": "train_test_split" }})[ 1 ]

    assert False, f"unexpected subset format { subset } for array of length { len( array )}"
        
